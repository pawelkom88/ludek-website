---
import "./main-nav.css";
import { getEntry } from "astro:content";

const { lang } = Astro.props;

const navContent = await getEntry("nav", lang);
const links = navContent?.data || {};
---

<nav class="main-nav">
  <ul class="main-ul">
    {
      Object.entries(links).map(([key, value]) => {
        const link = key === "home" ? `/${lang}` : `/${lang}/${key}`;

        return (
          <li class="main-li">
            <a class={`underline-link`} href={`${link}`}>
              {value}
            </a>
          </li>
        );
      })
    }
  </ul>
</nav>

<script>
  function handleNavigation() {
    const mainUl = document.querySelector(".main-ul") as HTMLUListElement;

    function setActiveLink(targetLink: Element) {
      const links = mainUl.querySelectorAll(".underline-link");
      links.forEach((link) => link.classList.remove("active-link"));
      targetLink.classList.add("active-link");
    }

    function updateActiveLink() {
      const currentPath = window.location.pathname;
      const links = mainUl.querySelectorAll(".underline-link");
      links.forEach((link) => {
        if (link.getAttribute("href") === currentPath) {
          setActiveLink(link);
        }
      });
    }

    mainUl.addEventListener("click", (e: Event) => {
      const link = (e.target as Element).closest(".underline-link");
      if (link) {
        setActiveLink(link);
      }
    });

    updateActiveLink();

    // Listen for View Transition navigation events
    document.addEventListener("astro:after-swap", updateActiveLink);
  }

  // Run on initial load
  handleNavigation();

  // Re-run after each View Transition
  document.addEventListener("astro:after-swap", handleNavigation);
</script>
